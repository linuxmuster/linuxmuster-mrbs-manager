#!/bin/bash

# Source config or die
. /etc/linuxmuster-mrbs-manager/config || exit 1

# Passwort erzeugen, wenn nötig
if [ $MRBS_DB_PASS == "GENERATE" ]; then 
	MRBS_DB_PASS=$(pwgen -n 22 1)
	sed -i "s/GENERATE/$MRBS_DB_PASS/" /etc/linuxmuster-mrbs-manager/config
fi

print_help () {
    echo "Aufruf:"
    echo "  $0 -a <aktion> -n <Instanzname> -d <DB-Name>"
    echo 
    echo "Aktion: new|update|migrate|status"
    echo "  - new    : erzeugt eine neue MRBS-Instanz"
    echo "  - update : aktualisiert eine MRBS-Instanz"
    echo "  - migrate: migriert eine MRBS-Instanz aus dem alten Paket"
    echo "  - status : zeigt alle von diesem Paket verwaltete MRBS-Instanzen an"
    echo 
    echo "Instanzname: Webroot Name, z.B. ka-plan"
    echo "  Die mrbs-Instanz steht dann unter https://<server>/ka-plan"
    echo "  zur Verfügung"
    echo "DB-Name: Name der InstanzDB, ohne Präfix, z.B. kaplan"
    echo "  Die mrbs-Instanz verwendet dann die DB ${MRBS_DB_PREFIX}_kaplan"
    echo 
    exit 0
}

while getopts ":a:n:d:" opt; do
case $opt in
    a)
    ACTION=$OPTARG
    ;;
    n)
    MRBS_NAME=$OPTARG
    ;;
    d)
    MRBS_DB_NAME=$OPTARG
    ;;
    \?)
    print_help
    ;;
esac
done

[ "x$ACTION" != "x" ] || print_help;
[ "x$MRBS_NAME" != "x" ] || print_help;
[ "x$MRBS_DB_NAME" != "x" ] || print_help;

# Zielverzeichnis für die neue Installation
TARGET_DIR=${MRBS_WEB_BASE}${MRBS_NAME}

if [ -d $TARGET_DIR ]; then 
	echo "Das Verzeichnis $TARGET_DIR"
	echo "existiert bereits."
	print_help
fi

for db in $(echo "show databases;" | mysql | grep $MRBS_DB_PREFIX); do
	if [ $db == $MRBS_DB_NAME ]; then 
		echo "$MRBS_DB_NAME existiert schon"
		print_help
	fi
done

execute_sql() {
# Keine Einrückung, here-doc
mysql -u root << EOMYSQL
$1
EOMYSQL
}

create_fresh_db () {
    # Datenbankbenutzer anlegen/Passwort setzen
    SQL="grant usage on *.* to ${MRBS_DB_USER}@localhost identified by \"${MRBS_DB_PASS}\";"
    SQL=$SQL"create database ${MRBS_DB_NAME};"
    SQL=$SQL"GRANT ALL PRIVILEGES ON ${MRBS_DB_NAME}.* TO ${MRBS_DB_USER}@localhost  IDENTIFIED BY \"${MRBS_DB_PASS}\";"
    SQL=$SQL"flush privileges;"
    execute_sql($SQL)
    # DB füllen
    mysql $MRBS_DB_NAME < "$MRBS_SRC/tables.my.sql"
}

create_new_webroot () {
    mkdir -p $MRBS_WEB_BASE
    cp -r $MRBS_SRC/web $TARGET_DIR
    cp -r $MRBS_PATCHES/web/* $TARGET_DIR
    cp $MRBS_APACHECFG /etc/linuxmuster-mrbs-manager/${MRBS_NAME}_apache.conf
    ln -s /etc/linuxmuster-mrbs-manager/${MRBS_NAME}_apache.conf /etc/apache2/conf.d/${MRBS_NAME}_apache.conf
}

patch_config() {
    # patch mrbs config
    CFILE="$TARGET_DIR/config.inc.php"
    echo $CFILE
    sed -i "s/\(\$db_login.*=\s*\).*;/\1\"$MRBS_DB_USER\";/" $CFILE
    sed -i "s/\(\$db_password.*=\s*\).*;/\1\"$MRBS_DB_PASS\";/" $CFILE
    sed -i "s/\(\$db_database.*=\s*\).*;/\1\"$MRBS_DB_NAME\";/" $CFILE
    # patch and link apache config
    CFILE="/etc/linuxmuster-mrbs-manager/${MRBS_NAME}_apache.conf"
    sed -i "s/\#\#\#MRBS_NAME\#\#\#/$MRBS_NAME/g" $CFILE
    sed -i "s/\#\#\#TARGET_DIR\#\#\#/$TARGET_DIR/g" $CFILE
}


case $ACTION in
new)
    create_new_webroot
    create_fresh_db
    patch_config
    ;;
status)
    echo "Noch nicht implementiert :("
    ;;
migrate)
    echo "Noch nicht implementiert :("
    ;;
update)
    echo "Noch nicht implementiert :("
    ;;
    *)
    print_help
    ;;
esac

